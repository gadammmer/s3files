
------------------------------- ST_INE_EXP_INTERNATIONAL -------------------------------

CREATE OR REPLACE TABLE STAGING.ST_INE_EXP_INTERNACIONAL(
    MES VARCHAR(7),
    PAIS_ORIG_COD VARCHAR(3),
    PAIS_ORIG VARCHAR(50),
    MUN_DEST_COD VARCHAR(5),
    MUN_DEST VARCHAR(50),
    TURISTAS NUMBER(38,0),
    PROV_DEST_COD VARCHAR(3),
    PROV_DEST VARCHAR(50),
    LOAD_DATE DATE
)

------------------------------- AX_INE_TURISMO_INTERNACIONAL -------------------------------

CREATE OR REPLACE TABLE PROCESS.AX_INE_TURISMO_INTERNACIONAL (
	FECHA DATE,
	VALOR FLOAT,
	FAMILIA VARCHAR(50),
	TABLA VARCHAR(10),
	LOAD_TIME DATE,
	COD VARCHAR(30),
	NOMBRE VARCHAR(300),
    COMUNIDADES_Y_CIUDADES_AUTONOMAS VARCHAR(37),
    CONCEPTO_TURISTICO VARCHAR(62),
    CONTINENTES VARCHAR(32),
    PAISES VARCHAR(120),
    PROVINCIAS VARCHAR(37),
    RESIDENCIA_ORIGEN VARCHAR(39),
    TIPO_DE_DATO VARCHAR(39),
    TOTAL_NACIONAL VARCHAR(43),
    ZONAS_GEOGRAFICAS_DEL_RESTO_DEL_MUNDO VARCHAR(24),
    LOAD_DATA_TIME TIMESTAMP_LTZ(0)
);

INSERT INTO PROCESS.AX_INE_TURISMO_INTERNACIONAL (
SELECT 
    S.FECHA,
    S.VALOR,
    S.FAMILIA,
    S.TABLA,
    S.LOAD_TIME,
    S.COD,
    S.NOMBRE,
    TRIM(D.COMUNIDADES_Y_CIUDADES_AUTONOMAS),
    TRIM(D.CONCEPTO_TURISTICO),
    TRIM(D.CONTINENTES),
    TRIM(D.PAISES),
    TRIM(D.PROVINCIAS),
    TRIM(D.RESIDENCIA_ORIGEN),
    TRIM(D.TIPO_DE_DATO),
    TRIM(D.TOTAL_NACIONAL),
    TRIM(D.ZONAS_GEOGRAFICAS_DEL_RESTO_DEL_MUNDO),
    current_timestamp() LOAD_DATA_TIME
FROM STAGING.ST_INE_ALL S
INNER JOIN PROCESS.RL_INE_TURISMO_INTERNACIONAL D
ON S.FAMILIA = D.FAMILIA
AND S.COD = D.COD
AND S.TABLA =  D.TABLA
);

------------------------------- RL_INE_TURISMO_INTERNACIONAL -------------------------------

CREATE OR REPLACE TABLE PROCESS.RL_INE_TURISMO_INTERNACIONAL (
    FAMILIA VARCHAR(20),
    TABLA NUMBER(38,0),
    COD VARCHAR(20),
    COMUNIDADES_Y_CIUDADES_AUTONOMAS VARCHAR(37),
    CONCEPTO_TURISTICO VARCHAR(62),
    CONTINENTES VARCHAR(32),
    PAISES VARCHAR(120),
    PROVINCIAS VARCHAR(37),
    RESIDENCIA_ORIGEN VARCHAR(39),
    TIPO_DE_DATO VARCHAR(39),
    TOTAL_NACIONAL VARCHAR(43),
    ZONAS_GEOGRAFICAS_DEL_RESTO_DEL_MUNDO VARCHAR(24),
    LOAD_DATA_TIME TIMESTAMP
);


COPY INTO PROCESS.RL_INE_TURISMO_INTERNACIONAL (FAMILIA, TABLA, COD, COMUNIDADES_Y_CIUDADES_AUTONOMAS, CONCEPTO_TURISTICO, CONTINENTES, PAISES, PROVINCIAS, RESIDENCIA_ORIGEN, TIPO_DE_DATO, TOTAL_NACIONAL, ZONAS_GEOGRAFICAS_DEL_RESTO_DEL_MUNDO, LOAD_DATA_TIME)
FROM (SELECT $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, TO_TIMESTAMP_NTZ(CURRENT_TIMESTAMP) FROM '@s3_stage/ine_dt/RL_INE_TURISMO_INTERNACIONAL_V1.csv')
FILE_FORMAT = 'csv_format_dm' 
FORCE = TRUE 
ON_ERROR = 'CONTINUE';


------------------------------- AX_INE_EXP_INTERNATIONAL_ALL_TODAY -------------------------------

CREATE OR REPLACE TABLE PROCESS.AX_INE_EXP_INTERNATIONAL_ALL_TODAY (
    YEAR_MONTH_KEY	     NUMBER(10,0),
    COUNTRY_ORIGIN_ID   VARCHAR(10),
    COUNTRY_ORIGIN_DES  VARCHAR(50),
    CITY_DEST_ID	     VARCHAR(10),
    CITY_DEST_DES       VARCHAR(50),
    PROVINCE_DEST_ID    VARCHAR(10),
    PROVINCE_DEST_DES   VARCHAR(50),
    TOURIST_NUM         NUMBER(10,0),
    DUPLICATE_FILTER	 NUMBER(5,0),
    LOAD_TIME TIMESTAMP_LTZ default current_timestamp()
);

INSERT INTO PROCESS.AX_INE_EXP_INTERNATIONAL_ALL_TODAY
SELECT 
    REPLACE(MES,'-','') AS MES,
    DECODE(PAIS_ORIG_COD, '040', '499', PAIS_ORIG_COD),
    PAIS_ORIG,
    MUN_DEST_COD,
    MUN_DEST,
    PROV_DEST_COD,
    PROV_DEST,
    TURISTAS,
    ROW_NUMBER() OVER (PARTITION BY MES, PAIS_ORIG, MUN_DEST_COD, PROV_DEST_COD ORDER BY ST.LOAD_DATE DESC) AS DUPLICATE_FILTER,
    current_timestamp() LOAD_TIME
FROM STAGING.ST_INE_EXP_INTERNACIONAL ST
INNER JOIN (SELECT MAX(LOAD_DATE) LOAD_DATE FROM STAGING.ST_INE_EXP_INTERNACIONAL) LD
ON ST.LOAD_DATE = LD.LOAD_DATE ;



------------------------------- AX_INE_EXP_INTERNATIONAL -------------------------------

CREATE OR REPLACE TABLE PROCESS.AX_INE_EXP_INTERNATIONAL (
    YEAR_MONTH_KEY NUMBER(10,0),
    COUNTRY_ORIGIN_KEY NUMBER(5,0),
    CITY_DEST_KEY NUMBER(5,0),
    TOURIST_NUM NUMBER(10,0),
    LOAD_TIME TIMESTAMP_LTZ default current_timestamp()
);

INSERT INTO PROCESS.AX_INE_EXP_INTERNATIONAL

WITH FC_TABLE AS(
    SELECT 
        FC.*, CONCAT(FC.YEAR_MONTH_KEY, C.ID_EXPERIMENTAL, CY.CITY_ID) AS INNER_KEY
    FROM SIT.FC_INE_EXP_INTERNATIONAL FC
    LEFT JOIN SIT.DM_GLB_COUNTRY C
        ON FC.COUNTRY_ORIGIN_KEY = C.COUNTRY_KEY     
    LEFT JOIN SIT.DM_GLB_CITY_MGS CY
        ON FC.CITY_DEST_KEY = CY.CITY_KEY
)

SELECT
     YEAR_MONTH_KEY,
    NVL(C.COUNTRY_KEY,-3) AS COUNTRY_ORIGIN_KEY ,
    NVL(CY.CITY_KEY,-3) AS CITY_DEST_KEY,
    TOURIST_NUM,
    current_timestamp() LOAD_TIME
FROM PROCESS.AX_INE_EXP_INTERNATIONAL_ALL_TODAY EXPER

------------------------PAÍS
LEFT JOIN SIT.DM_GLB_COUNTRY C
    ON EXPER.COUNTRY_ORIGIN_ID = C.ID_EXPERIMENTAL
    
------------------------MUNICIPIO      
LEFT JOIN SIT.DM_GLB_CITY_MGS CY
    ON EXPER.CITY_DEST_ID = CY.CITY_ID
    
WHERE DUPLICATE_FILTER = 1    

UNION ALL

SELECT   
     FC.YEAR_MONTH_KEY,
    FC.COUNTRY_ORIGIN_KEY ,
    FC.CITY_DEST_KEY,
    FC.TOURIST_NUM,
    FC.LOAD_TIME
FROM FC_TABLE FC
LEFT JOIN PROCESS.AX_INE_EXP_INTERNATIONAL_ALL_TODAY AX
    ON FC.INNER_KEY = CONCAT(AX.YEAR_MONTH_KEY, AX.COUNTRY_ORIGIN_ID, AX.CITY_DEST_ID)
WHERE CONCAT(AX.YEAR_MONTH_KEY, AX.COUNTRY_ORIGIN_ID, AX.CITY_DEST_ID) IS NULL;

------------------------------- AX_INE_EXP_TOURISM_ALL_TODAY -------------------------------

CREATE OR REPLACE TABLE PROCESS.AX_INE_EXP_TOURISM_ALL_TODAY(
    FILTER_ID VARCHAR(20),
    PERIOD_KEY NUMBER(9,0),
    CODE_DES VARCHAR(200),
    KPI_ID VARCHAR(200),
    REGION_DES VARCHAR(200),
    PROVINCE_DES VARCHAR(200),
    COUNTRY_DES VARCHAR(200),
    RESIDENCE_ID VARCHAR(200),
    KPI_VALUE_NUM FLOAT,
    TABLE_ID VARCHAR(10),
    LOAD_TIME TIMESTAMP_LTZ(0)
);

insert into PROCESS.AX_INE_EXP_TOURISM_ALL_TODAY 
       (
              SELECT 
                  'INCOMING TOURISM' FILTER_ID,
                  TO_NUMBER(to_char(A.FECHA,'YYYYMMDD')) PERIOD_KEY,
                  COD CODE_DES,
                  DECODE(CONCEPTO_TURISTICO,
                    'Duración media de los viajes', 'Estancia media', 
                    'Turistas', 'Viajeros',
                    CONCEPTO_TURISTICO) KPI_ID,
                  DECODE(TRANSLATE(UPPER(COMUNIDADES_Y_CIUDADES_AUTONOMAS), 'ÁÉÍÓÚ', 'AEIOU')
                              ,'ASTURIAS, PRINCIPADO DE','ASTURIAS'
                              ,'CASTILLA - LA MANCHA','CASTILLA LA MANCHA'
                              ,'BALEARS, ILLES','ISLAS BALEARES'
                              ,'NAVARRA, COMUNIDAD FORAL DE','NAVARRA'
                              ,'COMUNITAT VALENCIANA','VALENCIA'
                              ,'MADRID, COMUNIDAD DE','MADRID'
                              ,'RIOJA, LA','LA RIOJA'
                              ,'MURCIA, REGION DE','MURCIA'
                              ,NVL(TRANSLATE(UPPER(COMUNIDADES_Y_CIUDADES_AUTONOMAS), 'ÁÉÍÓÚ', 'AEIOU'),'**********')
            ) AS REGION_DES,
                    TRANSLATE(UPPER(DECODE(PROVINCIAS
                              ,'Asturias (Principado de)' ,'ASTURIAS'
                              ,'Baleares (Illes)' ,'ISLAS BALEARES'
                              ,'Murcia (Región de)','MURCIA'
                              ,'Madrid (Comunidad de)','MADRID'
                              ,'Navarra (Comunidad Foral de)','NAVARRA'
                              ,'Rioja (La)','LA RIOJA'
                              ,'Vizcaya','BIZKAIA'
                              ,'Santa Cruz Tenerife','SANTA CRUZ DE TENERIFE'
                              ,'Guipúzcoa','GIPUZKOA'
                              ,'Alicante/Alacant','ALICANTE'
                              ,'Araba/Álava','ALAVA'
                              ,'Balears, Illes','ISLAS BALEARES'
                              ,'Coruña, A','A CORUÑA'
                              ,'Valencia/València','VALENCIA'
                              ,'Palmas, Las','LAS PALMAS'
                              ,'Castellón/Castelló','CASTELLON'
                              ,'Rioja, La','LA RIOJA'
                             ,NVL(PROVINCIAS,'**********'))),'ÁÉÍÓÚÜ()-/','AEIOUU')  PROVINCE_DES
                     ,COALESCE(PAISES, ZONAS_GEOGRAFICAS_DEL_RESTO_DEL_MUNDO, CONTINENTES) COUNTRY_DES
                     ,NVL(RESIDENCIA_ORIGEN,'**********') RESIDENCE_ID
                     ,NVL(A.VALOR,0) KPI_VALUE_NUM
                     ,TABLA
                     ,CURRENT_TIMESTAMP(0) LOAD_TIME
                     
              FROM PROCESS.AX_INE_TURISMO_INTERNACIONAL A
              
              WHERE UPPER(NVL(RESIDENCIA_ORIGEN,'**********'))!='TOTAL' --Eliminamos los totales 
              AND UPPER(NVL(TOTAL_NACIONAL,'**********'))!='TOTAL NACIONAL' --Eliminamos los totales 
              );

------------------------------- AX_INE_EXP_TOURISM -------------------------------

CREATE OR REPLACE TABLE PROCESS.AX_INE_EXP_TOURISM (
    FILTER_ID VARCHAR(20),
    PERIOD_KEY NUMBER(9,0),
    RESIDENCE_KEY NUMBER(16,0),
    REGION_KEY NUMBER(16,0),
    PROVINCE_KEY NUMBER(16,0),
    COUNTRY_KEY NUMBER(16,0),
    KPI_KEY NUMBER(16,0),
    KPI_VALUE_NUM FLOAT,
    LOAD_TIME DATETIME
);

insert into PROCESS.AX_INE_EXP_TOURISM 
    (
     select 
        FILTER_ID,
        PERIOD_KEY,
        NVL(RO.ID,-3) RESIDENCE_KEY ,
        NVL(R.REGION_KEY, -3) REGION_KEY,
        NVL(P.PROVINCE_KEY,-3) PROVINCE_KEY,
        NVL(CY.COUNTRY_KEY, -3) COUNTRY_KEY,
        NVL(B.KPI_KEY,-3) KPI_KEY,
        KPI_VALUE_NUM,
        CURRENT_TIMESTAMP(0) LOAD_TIME
        
        FROM PROCESS.AX_INE_EXP_TOURISM_ALL_TODAY A
        LEFT JOIN SIT.DM_IVE_KPI_MASTER B
        ON A.KPI_ID=B.KPI_ID

        LEFT JOIN SIT.DM_INE_RESIDENCIA_ORIGEN RO
        ON A.RESIDENCE_ID=RO.NOMBRE

        LEFT JOIN SIT.DM_GLB_REGION R
        ON A.REGION_DES = R.REGION_NORM_DES

        LEFT JOIN PROCESS.RL_COUNTRY_TRANSLATOR TRA
        ON A.COUNTRY_DES = TRA.RAW_COUNTRY_DES

        LEFT JOIN SIT.DM_GLB_COUNTRY CY
        ON TRA.COUNTRY_ID=CY.COUNTRY_ID

        LEFT JOIN SIT.DM_GLB_PROVINCE P
        ON A.PROVINCE_DES = P.PROVINCE_NORM_DES
    );


------------------------------- FC_INE_EXP_INTERNATIONAL -------------------------------


CREATE OR REPLACE TABLE SIT.FC_INE_EXP_INTERNATIONAL(
    YEAR_MONTH_KEY NUMBER(10,0),
    COUNTRY_ORIGIN_KEY NUMBER(5,0),
    CITY_DEST_KEY NUMBER(5,0),
    TOURIST_NUM NUMBER(10,0),
    LOAD_TIME TIMESTAMP_LTZ default current_timestamp()
);

INSERT INTO SIT.FC_INE_EXP_INTERNATIONAL(
    SELECT
        YEAR_MONTH_KEY,
        COUNTRY_ORIGIN_KEY,
        CITY_DEST_KEY,
        TOURIST_NUM,
        LOAD_TIME
    FROM SIT.AX_INE_EXP_INTERNATIONAL
WHERE COUNTRY_ORIGIN_KEY>0 AND CITY_DEST_KEY>0 );

------------------------------- FC_INE_EXP_TOURISM -------------------------------


CREATE OR REPLACE TABLE SIT.FC_INE_EXP_TOURISM(
    PERIOD_KEY NUMBER(9,0),
    RESIDENCE_KEY NUMBER(16,0),
    REGION_KEY NUMBER(16,0),
    PROVINCE_KEY NUMBER(16,0),
    COUNTRY_KEY NUMBER(16,0),
    KPI_KEY NUMBER(16,0),
    KPI_VALUE_NUM FLOAT,
    LOAD_TIME	TIMESTAMP_NTZ(9)
);

INSERT INTO SIT.FC_INE_EXP_TOURISM  
      (
        SELECT
            PERIOD_KEY,
            RESIDENCE_KEY,
            REGION_KEY,
            PROVINCE_KEY,
            COUNTRY_KEY,
            KPI_KEY,
            KPI_VALUE_NUM,
            CURRENT_TIMESTAMP(0) LOAD_TIME
        FROM SIT.AX_INE_EXP_TOURISM a             
      );

------------------------------- DM_GLB_COUNTRY -------------------------------

create or replace TABLE SIT.DM_GLB_COUNTRY (
	COUNTRY_KEY NUMBER(16,0),
	COUNTRY_ID VARCHAR(12),
	COUNTRY_DES VARCHAR(75),
	COUNTRY_NORM_DES VARCHAR(75),
	COUNTRY_SHORT_DES VARCHAR(15),
	COUNTRY_SHORT2_DES VARCHAR(15),
	COUNTRY_EUROSTAT_ID VARCHAR(15),
	ID_INE NUMBER(16,0),
	ID_ETR VARCHAR(15),
	ID_FRONTUR VARCHAR(15),
	ID_EGATUR VARCHAR(15),
    ID_EXPERIMENTAL VARCHAR(10),
	LOAD_TIME TIMESTAMP_NTZ(9)
);

COPY INTO SIT.DM_GLB_COUNTRY (COUNTRY_KEY, COUNTRY_ID, COUNTRY_DES, COUNTRY_NORM_DES, COUNTRY_SHORT_DES, COUNTRY_SHORT2_DES, COUNTRY_EUROSTAT_ID, ID_INE, ID_ETR, ID_FRONTUR, ID_EGATUR, ID_EXPERIMENTAL, LOAD_TIME)
FROM (SELECT $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, TO_TIMESTAMP_NTZ(CURRENT_TIMESTAMP) FROM '@s3_stage/global/DM_GLB_COUNTRY_V11.csv')
FILE_FORMAT = 'csv_format_dm' 
FORCE = TRUE 
ON_ERROR = 'CONTINUE';


create or replace TABLE PROCESS.RL_COUNTRY_TRANSLATOR (
	RAW_COUNTRY_DES VARCHAR(200),
	ORIGIN_DATA_ID VARCHAR(200),
	COUNTRY_DES VARCHAR(200),
	COUNTRY_ID VARCHAR(200),
	LOAD_TIME TIMESTAMP_LTZ(9) DEFAULT CURRENT_TIMESTAMP()
);

COPY INTO PROCESS.RL_COUNTRY_TRANSLATOR (RAW_COUNTRY_DES, ORIGIN_DATA_ID, COUNTRY_DES, COUNTRY_ID, LOAD_TIME)
FROM (SELECT $1, $2, $3, $4, TO_TIMESTAMP_NTZ(CURRENT_TIMESTAMP) FROM '@s3_stage/flux_dt/RL_COUNTRY_TRANSLATOR_V2.csv')
FILE_FORMAT = 'csv_format_dm' 
FORCE = TRUE 
ON_ERROR = 'CONTINUE';


create or replace TABLE SIT.DM_GLB_CITY (
	CITY_KEY NUMBER(16,0) NOT NULL,
	CITY_ID VARCHAR(5),
	CITY_CODE_ID VARCHAR(3),
	CITY_DES VARCHAR(75),
	CITY_NORM_DES VARCHAR(75),
	COMARCAL_REGION_KEY NUMBER(16,0),
	PROVINCE_KEY NUMBER(16,0),
	COUNTRY_KEY NUMBER(16,0),
	CITY_EUROSTAT_ID VARCHAR(15),
	CITY_IATA_ID VARCHAR(30),
	LATITUDE_NUM VARCHAR(30),
	LONGITUDE_NUM FLOAT,
	TOURIST_SPOT_FLG NUMBER(16,0),
	LOAD_TIME TIMESTAMP_NTZ(9),
	primary key (CITY_KEY)
);

COPY INTO SIT.DM_GLB_CITY (CITY_KEY, CITY_ID, CITY_CODE_ID, CITY_DES, CITY_NORM_DES, COMARCAL_REGION_KEY, PROVINCE_KEY, COUNTRY_KEY, CITY_EUROSTAT_ID, CITY_IATA_ID, LATITUDE_NUM, LONGITUDE_NUM, TOURIST_SPOT_FLG, LOAD_TIME)
FROM (SELECT $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, TO_TIMESTAMP_NTZ(CURRENT_TIMESTAMP) FROM '@s3_stage/global/DM_GLB_CITY_V7.csv')
FILE_FORMAT = 'csv_format_dm' 
FORCE = TRUE 
ON_ERROR = 'CONTINUE';